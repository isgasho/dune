// Code generated by "stringer -type=Type"; DO NOT EDIT.

package sqx

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NOTSET-0]
	_ = x[ERROR-1]
	_ = x[EOF-2]
	_ = x[COMMENT-3]
	_ = x[CREATE-4]
	_ = x[SHOW-5]
	_ = x[DROP-6]
	_ = x[ALTER-7]
	_ = x[TABLE-8]
	_ = x[DATABASE-9]
	_ = x[NOT-10]
	_ = x[EXISTS-11]
	_ = x[CONSTRAINT-12]
	_ = x[INTEGER-13]
	_ = x[DECIMAL-14]
	_ = x[CHAR-15]
	_ = x[VARCHAR-16]
	_ = x[TEXT-17]
	_ = x[MEDIUMTEXT-18]
	_ = x[BOOL-19]
	_ = x[BLOB-20]
	_ = x[MEDIUMBLOB-21]
	_ = x[DATETIME-22]
	_ = x[DEFAULT-23]
	_ = x[SELECT-24]
	_ = x[DISTINCT-25]
	_ = x[INSERT-26]
	_ = x[INTO-27]
	_ = x[VALUES-28]
	_ = x[UPDATE-29]
	_ = x[SET-30]
	_ = x[DELETE-31]
	_ = x[FROM-32]
	_ = x[WHERE-33]
	_ = x[GROUP-34]
	_ = x[HAVING-35]
	_ = x[JOIN-36]
	_ = x[LEFT-37]
	_ = x[RIGHT-38]
	_ = x[INNER-39]
	_ = x[OUTER-40]
	_ = x[CROSS-41]
	_ = x[ON-42]
	_ = x[AS-43]
	_ = x[IN-44]
	_ = x[NOTIN-45]
	_ = x[BETWEEN-46]
	_ = x[LIKE-47]
	_ = x[IS-48]
	_ = x[ISNOT-49]
	_ = x[NOTLIKE-50]
	_ = x[ORDER-51]
	_ = x[BY-52]
	_ = x[ASC-53]
	_ = x[DESC-54]
	_ = x[RANDOM-55]
	_ = x[LIMIT-56]
	_ = x[UNION-57]
	_ = x[AND-58]
	_ = x[OR-59]
	_ = x[NULL-60]
	_ = x[TRUE-61]
	_ = x[FALSE-62]
	_ = x[FOR-63]
	_ = x[IDENT-64]
	_ = x[INT-65]
	_ = x[FLOAT-66]
	_ = x[STRING-67]
	_ = x[ADD-68]
	_ = x[SUB-69]
	_ = x[MUL-70]
	_ = x[DIV-71]
	_ = x[MOD-72]
	_ = x[LSF-73]
	_ = x[RSF-74]
	_ = x[ANB-75]
	_ = x[EQL-76]
	_ = x[LSS-77]
	_ = x[GTR-78]
	_ = x[NT-79]
	_ = x[NEQ-80]
	_ = x[LEQ-81]
	_ = x[GEQ-82]
	_ = x[LPAREN-83]
	_ = x[LBRACK-84]
	_ = x[LBRACE-85]
	_ = x[COMMA-86]
	_ = x[PERIOD-87]
	_ = x[RPAREN-88]
	_ = x[COLON-89]
	_ = x[SEMICOLON-90]
	_ = x[QUESTION-91]
}

const _Type_name = "NOTSETERROREOFCOMMENTCREATESHOWDROPALTERTABLEDATABASENOTEXISTSCONSTRAINTINTEGERDECIMALCHARVARCHARTEXTMEDIUMTEXTBOOLBLOBMEDIUMBLOBDATETIMEDEFAULTSELECTDISTINCTINSERTINTOVALUESUPDATESETDELETEFROMWHEREGROUPHAVINGJOINLEFTRIGHTINNEROUTERCROSSONASINNOTINBETWEENLIKEISISNOTNOTLIKEORDERBYASCDESCRANDOMLIMITUNIONANDORNULLTRUEFALSEFORIDENTINTFLOATSTRINGADDSUBMULDIVMODLSFRSFANBEQLLSSGTRNTNEQLEQGEQLPARENLBRACKLBRACECOMMAPERIODRPARENCOLONSEMICOLONQUESTION"

var _Type_index = [...]uint16{0, 6, 11, 14, 21, 27, 31, 35, 40, 45, 53, 56, 62, 72, 79, 86, 90, 97, 101, 111, 115, 119, 129, 137, 144, 150, 158, 164, 168, 174, 180, 183, 189, 193, 198, 203, 209, 213, 217, 222, 227, 232, 237, 239, 241, 243, 248, 255, 259, 261, 266, 273, 278, 280, 283, 287, 293, 298, 303, 306, 308, 312, 316, 321, 324, 329, 332, 337, 343, 346, 349, 352, 355, 358, 361, 364, 367, 370, 373, 376, 378, 381, 384, 387, 393, 399, 405, 410, 416, 422, 427, 436, 444}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
